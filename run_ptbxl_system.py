#!/usr/bin/env python3
"""
Script para executar CardioAI Pro com modelo PTB-XL pr√©-treinado
Sistema completo de an√°lise de ECG por imagens com precis√£o diagn√≥stica real
"""

import os
import sys
import logging
from pathlib import Path

# Configurar logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def setup_environment():
    """Configura o ambiente para execu√ß√£o."""
    try:
        # Adicionar diret√≥rio atual ao PYTHONPATH
        current_dir = Path(__file__).parent.absolute()
        if str(current_dir) not in sys.path:
            sys.path.insert(0, str(current_dir))
        
        # Verificar se modelo existe
        model_path = current_dir / "models" / "ecg_model_final.h5"
        if not model_path.exists():
            logger.warning(f"‚ö†Ô∏è Modelo PTB-XL n√£o encontrado em: {model_path}")
            logger.warning("Sistema funcionar√° com modelo demo")
        else:
            logger.info(f"‚úÖ Modelo PTB-XL encontrado: {model_path}")
        
        # Verificar depend√™ncias cr√≠ticas
        try:
            import tensorflow as tf
            logger.info(f"‚úÖ TensorFlow {tf.__version__} dispon√≠vel")
        except ImportError:
            logger.error("‚ùå TensorFlow n√£o instalado - modelo PTB-XL n√£o funcionar√°")
            return False
        
        try:
            import fastapi
            logger.info(f"‚úÖ FastAPI {fastapi.__version__} dispon√≠vel")
        except ImportError:
            logger.error("‚ùå FastAPI n√£o instalado")
            return False
        
        try:
            import cv2
            logger.info(f"‚úÖ OpenCV dispon√≠vel")
        except ImportError:
            logger.error("‚ùå OpenCV n√£o instalado - digitaliza√ß√£o de imagens n√£o funcionar√°")
            return False
        
        return True
        
    except Exception as e:
        logger.error(f"Erro na configura√ß√£o do ambiente: {str(e)}")
        return False

def main():
    """Fun√ß√£o principal."""
    logger.info("üöÄ Iniciando CardioAI Pro - PTB-XL Edition...")
    
    # Configurar ambiente
    if not setup_environment():
        logger.error("‚ùå Falha na configura√ß√£o do ambiente")
        sys.exit(1)
    
    try:
        # Importar e executar aplica√ß√£o
        import uvicorn
        from backend.app.main_ptbxl import app
        
        logger.info("üåê Iniciando servidor web...")
        logger.info("üìä Modelo PTB-XL: AUC 0.9979, 71 condi√ß√µes card√≠acas")
        logger.info("üñºÔ∏è An√°lise de imagens ECG: JPG, PNG, PDF, etc.")
        logger.info("üè• Compatibilidade FHIR R4 completa")
        logger.info("üîó Interface web: http://localhost:8000")
        logger.info("üìö Documenta√ß√£o: http://localhost:8000/docs")
        
        # Executar servidor
        uvicorn.run(
            app,
            host="0.0.0.0",
            port=8000,
            log_level="info",
            access_log=True
        )
        
    except KeyboardInterrupt:
        logger.info("üõë Sistema interrompido pelo usu√°rio")
    except Exception as e:
        logger.error(f"‚ùå Erro na execu√ß√£o: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    main()

